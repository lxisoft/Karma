/**
 * RegisteredUser entity.
 * @author Muhammed Ruhail
 */
entity RegisteredUser{
  email String,
  firstName String,
  lastName String,
  rating Long,
  description String,
  profession String,
  gender String,
  dob LocalDate,
  bloodGroup String,
  emotionalQuotient Long,
  socialQuotient Long,
  happinessIndex Long
}
/**
 * IdentityProof entity.
 * @author Sarangi Balu
 */
entity IdentityProof{
  idNo String
}
/**
 * IdentityProofType entity.
 * @author Sarangi Balu
 */
entity IdentityProofType{
  type String
}
/**
 * ApprovalStatus entity.
 * @author Sanil kumar
 */
entity ApprovalStatus{
  status String
}

/**
 * Address entity.
 * @author Neeraja
 */
entity Address{
  houseName String,
  place String,
  city String,
  state String,
  country String,
  zip Long  
}

/**
 * Media entity.
 * @author Dheeraj das.
 */
entity Media {
  fileName String,
  url String,
  extension String
}

/**
 * Category entity.
 * @author Dheeraj das.
 */
entity Category {
  name String,
  subCategory String
}

/**
*UserCheck entity
*@author Deepthi E
*/
entity UserCheck
{
  voteType String, 
  category String
}

/**
*Need entity
*@author Balagopal v
*/
entity Need{
  description String,
  beneficiaryType String,
  date Instant
}

/* Service entity
*@Author Sooraj Pn
*/
entity Help {
  time Instant,
  description String
}

/*
*@Author Anjali
*/
entity Severity{
  severityLevel String
}

/*
*@Author Sarangi Balu
*/
entity VerificationTeam {
  approvalLevel String
}

/**
*Post entity
*@author Deepthi E
*/
entity Post{         	
  description String,
  date Instant
}
 
/**
*Comment entity
*@author Deepthi E
*/
entity Comment{
  message String,
  date Instant
}
 
/**
*Reply  entity
*@author  Deepthi E
*/
entity  Reply{
  message String,
  date Instant
}
 
/**
*Feed entity
*@author Deepthi E
*/
entity  Feed{
  title String,
  type String,
  date Instant,
  referenceId Long 
}
relationship OneToOne{
  RegisteredUser{profilePic} to Media,
  RegisteredUser{idProof} to IdentityProof{owner}  
}

relationship OneToMany{
  RegisteredUser{addresses} to Address,
  RegisteredUser{needs} to Need{postedUser},
  RegisteredUser{Helps} to Help{providedUser},
  Need{proofs} to Media,
  Help{proofs} to Media,
  Need{Helps} to Help{fulfilledNeed},
  Comment{replies}   to Reply, 
  Post{attachments}  to Media,
  RegisteredUser{posts} to Post{RegisteredUser},
  Post{comments} to Comment,
  Need{comments} to Comment,
  Help{comments} to Comment,
  RegisteredUser{feeds} to Feed{RegisteredUser}
}
  
relationship ManyToOne{
  Need{severity} to Severity{needs},
  Need{verificationTeam} to VerificationTeam{needs},
  Need{approvalStatus} to ApprovalStatus{needs},
  Help{approvalStatus} to ApprovalStatus{Helps},
  UserCheck{checkedNeed} to Need{userChecks},
  UserCheck{checkedUser} to RegisteredUser{checkedNeeds},
  UserCheck{Comment}   to  Comment{userChecks},
  UserCheck{Reply}   to  Reply{userChecks},
  UserCheck{post}  to  Post{userChecks},
  UserCheck{checkedHelp} to Help{userChecks},
  Comment{commentedUser} to RegisteredUser,
  Reply{repliedUser} to RegisteredUser,  
  IdentityProof{IdentityProofType} to IdentityProofType,
  Need{personInCharge} to RegisteredUser
}

relationship ManyToMany{
  Need{categories} to Category{needs},
  VerificationTeam{approvingUsers} to RegisteredUser{verificationTeams}
}

paginate * with pagination
dto * with mapstruct

// Set service options to all 
service all with serviceImpl 



